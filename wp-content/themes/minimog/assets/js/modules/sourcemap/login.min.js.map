{"version":3,"sources":["login.js"],"names":["$","Helpers","window","minimog","valMessages","$minimogLogin","validatorMessages","extend","validator","messages","simple","maxlength","format","minlength","rangelength","range","max","min","document","ready","$body","$modalLogin","$modalRegister","$modalLostPassword","find","prop","validate","rules","user_login","required","password","submitHandler","form","$form","$submitBtn","ajax","url","$minimog","ajaxurl","type","cache","dataType","data","serialize","success","response","html","addClass","show","redirect_url","location","href","reload","hcaptcha","captchaID","reset","beforeSend","removeClass","hide","setElementHandling","complete","unsetElementHandling","hasClass","MinimogModal","on","e","preventDefault","stopPropagation","groupField","this","parent","pwField","children","attr","fullname","username","email","evt","jQuery"],"mappings":"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","file":"../../login.min.js","sourcesContent":["(\n\tfunction( $ ) {\n\t\t'use strict';\n\n\t\tvar Helpers     = window.minimog.Helpers,\n\t\t    valMessages = $minimogLogin.validatorMessages;\n\n\t\t$.extend( $.validator.messages, valMessages.simple, {\n\t\t\tmaxlength: $.validator.format( valMessages.format.maxlength ),\n\t\t\tminlength: $.validator.format( valMessages.format.minlength ),\n\t\t\trangelength: $.validator.format( valMessages.format.rangelength ),\n\t\t\trange: $.validator.format( valMessages.format.range ),\n\t\t\tmax: $.validator.format( valMessages.format.max ),\n\t\t\tmin: $.validator.format( valMessages.format.min )\n\t\t} );\n\n\t\t$( document ).ready( function() {\n\t\t\tvar $body              = $( 'body' ),\n\t\t\t    $modalLogin        = $( '#modal-user-login' ),\n\t\t\t    $modalRegister     = $( '#modal-user-register' ),\n\t\t\t    $modalLostPassword = $( '#modal-user-lost-password' );\n\n\t\t\t// Remove inline css.\n\t\t\t$modalLogin.find( '.mo-openid-app-icons .mo_btn-social' ).prop( 'style', false );\n\t\t\t$modalLogin.find( '.mo-openid-app-icons .mo_btn-social .mofa' ).prop( 'style', false );\n\t\t\t$modalLogin.find( '.mo-openid-app-icons .mo_btn-social svg' ).prop( 'style', false );\n\n\t\t\t$modalLogin.find( '#minimog-login-form' ).validate( {\n\t\t\t\trules: {\n\t\t\t\t\tuser_login: {\n\t\t\t\t\t\trequired: true\n\t\t\t\t\t},\n\t\t\t\t\tpassword: {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsubmitHandler: function( form ) {\n\t\t\t\t\tvar $form      = $( form ),\n\t\t\t\t\t    $submitBtn = $form.find( 'button[type=\"submit\"]' );\n\n\t\t\t\t\t$.ajax( {\n\t\t\t\t\t\turl: $minimog.ajaxurl,\n\t\t\t\t\t\ttype: 'POST',\n\t\t\t\t\t\tcache: false,\n\t\t\t\t\t\tdataType: 'json',\n\t\t\t\t\t\tdata: $form.serialize(),\n\t\t\t\t\t\tsuccess: function( response ) {\n\t\t\t\t\t\t\tif ( ! response.success ) {\n\t\t\t\t\t\t\t\t$form.find( '.form-response-messages' ).html( response.data.messages ).addClass( 'error' ).show();\n\t\t\t\t\t\t\t\tif ( typeof hcaptcha !== 'undefined' ) {\n\t\t\t\t\t\t\t\t\tvar captchaID = $form.find( '.h-captcha' ).find( 'iframe' ).data( 'hcaptcha-widget-id' );\n\t\t\t\t\t\t\t\t\thcaptcha.reset( captchaID );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$form.find( '.form-response-messages' ).html( response.data.messages ).addClass( 'success' ).show();\n\n\t\t\t\t\t\t\t\tif ( '' !== response.data.redirect_url ) {\n\t\t\t\t\t\t\t\t\twindow.location.href = response.data.redirect_url;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tlocation.reload();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbeforeSend: function() {\n\t\t\t\t\t\t\t$form.find( '.form-response-messages' ).html( '' ).removeClass( 'error success' ).hide();\n\t\t\t\t\t\t\tHelpers.setElementHandling( $submitBtn );\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcomplete: function() {\n\t\t\t\t\t\t\tHelpers.unsetElementHandling( $submitBtn );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif ( $body.hasClass( 'required-login' ) && ! $body.hasClass( 'logged-in' ) ) {\n\t\t\t\t$modalLogin.MinimogModal( 'open' );\n\t\t\t}\n\n\t\t\t$body.on( 'click', '.open-modal-login', function( e ) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\n\t\t\t\t$modalLogin.MinimogModal( 'open' );\n\t\t\t} );\n\n\t\t\t$body.on( 'click', '.open-modal-register', function( e ) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\n\n\t\t\t\t$modalRegister.MinimogModal( 'open' );\n\t\t\t} );\n\n\t\t\t$body.on( 'click', '.open-modal-lost-password', function( e ) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\n\t\t\t\t$modalLostPassword.MinimogModal( 'open' );\n\t\t\t} );\n\n\t\t\t$body.on( 'click', '.btn-pw-toggle', function( e ) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\n\t\t\t\tvar groupField = $( this ).parent( '.form-input-password' );\n\t\t\t\tvar pwField = groupField.children( 'input' );\n\n\t\t\t\tif ( 'password' === pwField.attr( 'type' ) ) {\n\t\t\t\t\tpwField.attr( 'type', 'text' );\n\t\t\t\t\tgroupField.addClass( 'show-pw' );\n\t\t\t\t} else {\n\t\t\t\t\tpwField.attr( 'type', 'password' );\n\t\t\t\t\tgroupField.removeClass( 'show-pw' );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t$modalRegister.find( '#minimog-register-form' ).validate( {\n\t\t\t\trules: {\n\t\t\t\t\tfullname: {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t},\n\t\t\t\t\tusername: {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tminlength: 4,\n\t\t\t\t\t},\n\t\t\t\t\temail: {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\temail: true\n\t\t\t\t\t},\n\t\t\t\t\tpassword: {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tminlength: 8,\n\t\t\t\t\t\tmaxlength: 30\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tsubmitHandler: function( form ) {\n\t\t\t\t\tvar $form      = $( form ),\n\t\t\t\t\t    $submitBtn = $form.find( 'button[type=\"submit\"]' );\n\n\t\t\t\t\t$.ajax( {\n\t\t\t\t\t\turl: $minimog.ajaxurl,\n\t\t\t\t\t\ttype: 'POST',\n\t\t\t\t\t\tcache: false,\n\t\t\t\t\t\tdataType: 'json',\n\t\t\t\t\t\tdata: $form.serialize(),\n\t\t\t\t\t\tsuccess: function( response ) {\n\t\t\t\t\t\t\tif ( ! response.success ) {\n\t\t\t\t\t\t\t\t$form.find( '.form-response-messages' ).html( response.data.messages ).addClass( 'error' ).show();\n\t\t\t\t\t\t\t\tif ( typeof hcaptcha !== 'undefined' ) {\n\t\t\t\t\t\t\t\t\tvar captchaID = $form.find( '.h-captcha' ).find( 'iframe' ).data( 'hcaptcha-widget-id' );\n\t\t\t\t\t\t\t\t\thcaptcha.reset( captchaID );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$form.find( '.form-response-messages' ).html( response.data.messages ).addClass( 'success' ).show();\n\t\t\t\t\t\t\t\tlocation.reload();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbeforeSend: function() {\n\t\t\t\t\t\t\t$form.find( '.form-response-messages' ).html( '' ).removeClass( 'error success' ).hide();\n\t\t\t\t\t\t\tHelpers.setElementHandling( $submitBtn );\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcomplete: function() {\n\t\t\t\t\t\t\tHelpers.unsetElementHandling( $submitBtn );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t$modalLostPassword.find( '#minimog-lost-password-form' ).on( 'submit', function( evt ) {\n\t\t\t\tevt.preventDefault();\n\n\t\t\t\tvar $form      = $( this ),\n\t\t\t\t    $submitBtn = $form.find( 'button[type=\"submit\"]' );\n\n\t\t\t\t$.ajax( {\n\t\t\t\t\ttype: 'post',\n\t\t\t\t\turl: $minimog.ajaxurl,\n\t\t\t\t\tdataType: 'json',\n\t\t\t\t\tdata: $form.serialize(),\n\t\t\t\t\tsuccess: function( response ) {\n\t\t\t\t\t\tif ( ! response.success ) {\n\t\t\t\t\t\t\t$form.find( '.form-response-messages' ).html( response.data.messages ).addClass( 'error' ).show();\n\t\t\t\t\t\t\tif ( typeof hcaptcha !== 'undefined' ) {\n\t\t\t\t\t\t\t\tvar captchaID = $form.find( '.h-captcha' ).find( 'iframe' ).data( 'hcaptcha-widget-id' );\n\t\t\t\t\t\t\t\thcaptcha.reset( captchaID );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$form.find( '.form-response-messages' ).html( response.data.messages ).addClass( 'success' ).show();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tbeforeSend: function() {\n\t\t\t\t\t\t$form.find( '.form-response-messages' ).html( '' ).removeClass( 'error success' ).hide();\n\t\t\t\t\t\tHelpers.setElementHandling( $submitBtn );\n\t\t\t\t\t},\n\t\t\t\t\tcomplete: function() {\n\t\t\t\t\t\tHelpers.unsetElementHandling( $submitBtn );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t} );\n\n\t}( jQuery )\n);\n"]}