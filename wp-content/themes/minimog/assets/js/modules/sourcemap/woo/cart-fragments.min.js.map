{"version":3,"sources":["cart-fragments.js"],"names":["jQuery","$","wc_cart_fragments_params","$supports_html5_storage","cart_hash_key","window","sessionStorage","setItem","removeItem","localStorage","err","set_cart_creation_timestamp","Date","getTime","set_cart_hash","cart_hash","cart_timeout","$fragment_refresh","url","wc_ajax_url","toString","replace","type","data","time","timeout","request_timeout","success","fragments","each","key","value","replaceWith","fragment_name","JSON","stringify","document","body","trigger","error","refresh_cart_fragment","ajax","loadCartFragments","loadCartContent","wc_fragments","parse","getItem","cookie_hash","Cookies","get","cart_created","cart_expiration","timestamp_now","setTimeout","on","event","prev_cart_hash","clearTimeout","e","originalEvent","persisted","empty","closest","show","hide","wp","customize","selectiveRefresh","widgetsPreview","WidgetPartial","bind"],"mappings":"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","file":"../../../woo/cart-fragments.min.js","sourcesContent":["/* global wc_cart_fragments_params, Cookies */\njQuery( function( $ ) {\n\n\t// wc_cart_fragments_params is required to continue, ensure the object exists\n\tif ( typeof wc_cart_fragments_params === 'undefined' ) {\n\t\treturn false;\n\t}\n\n\t/* Storage Handling */\n\tvar $supports_html5_storage = true,\n\t    cart_hash_key           = wc_cart_fragments_params.cart_hash_key;\n\n\ttry {\n\t\t$supports_html5_storage = (\n\t\t\t'sessionStorage' in window && window.sessionStorage !== null\n\t\t);\n\t\twindow.sessionStorage.setItem( 'wc', 'test' );\n\t\twindow.sessionStorage.removeItem( 'wc' );\n\t\twindow.localStorage.setItem( 'wc', 'test' );\n\t\twindow.localStorage.removeItem( 'wc' );\n\t} catch ( err ) {\n\t\t$supports_html5_storage = false;\n\t}\n\n\t/* Cart session creation time to base expiration on */\n\tfunction set_cart_creation_timestamp() {\n\t\tif ( $supports_html5_storage ) {\n\t\t\tsessionStorage.setItem( 'wc_cart_created', (\n\t\t\t\tnew Date()\n\t\t\t).getTime() );\n\t\t}\n\t}\n\n\t/** Set the cart hash in both session and local storage */\n\tfunction set_cart_hash( cart_hash ) {\n\t\tif ( $supports_html5_storage ) {\n\t\t\tlocalStorage.setItem( cart_hash_key, cart_hash );\n\t\t\tsessionStorage.setItem( cart_hash_key, cart_hash );\n\t\t}\n\t}\n\n\tvar $fragment_refresh = {\n\t\turl: wc_cart_fragments_params.wc_ajax_url.toString().replace( '%%endpoint%%', 'get_refreshed_fragments' ),\n\t\ttype: 'POST',\n\t\tdata: {\n\t\t\ttime: new Date().getTime()\n\t\t},\n\t\ttimeout: wc_cart_fragments_params.request_timeout,\n\t\tsuccess: function( data ) {\n\t\t\tif ( data && data.fragments ) {\n\n\t\t\t\t$.each( data.fragments, function( key, value ) {\n\t\t\t\t\t$( key ).replaceWith( value );\n\t\t\t\t} );\n\n\t\t\t\tif ( $supports_html5_storage ) {\n\t\t\t\t\tsessionStorage.setItem( wc_cart_fragments_params.fragment_name, JSON.stringify( data.fragments ) );\n\t\t\t\t\tset_cart_hash( data.cart_hash );\n\n\t\t\t\t\tif ( data.cart_hash ) {\n\t\t\t\t\t\tset_cart_creation_timestamp();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$( document.body ).trigger( 'wc_fragments_refreshed' );\n\t\t\t}\n\t\t},\n\t\terror: function() {\n\t\t\t$( document.body ).trigger( 'wc_fragments_ajax_error' );\n\t\t}\n\t};\n\n\t/* Named callback for refreshing cart fragment */\n\tfunction refresh_cart_fragment() {\n\t\t$.ajax( $fragment_refresh );\n\t}\n\n\t/* Cart Handling */\n\tif ( $supports_html5_storage ) {\n\n\t\tvar cart_timeout = null,\n\t\t    day_in_ms    = (\n\t\t\t    24 * 60 * 60 * 1000\n\t\t    );\n\n\t\t$( document.body ).on( 'wc_fragment_refresh updated_wc_div', function() {\n\t\t\trefresh_cart_fragment();\n\t\t} );\n\n\t\t$( document.body ).on( 'added_to_cart removed_from_cart', function( event, fragments, cart_hash ) {\n\t\t\tvar prev_cart_hash = sessionStorage.getItem( cart_hash_key );\n\n\t\t\tif ( prev_cart_hash === null || prev_cart_hash === undefined || prev_cart_hash === '' ) {\n\t\t\t\tset_cart_creation_timestamp();\n\t\t\t}\n\n\t\t\t// @Minimog Remove all notices from fragments before save it. Because we display them all.\n\t\t\tdelete fragments[ '.woocommerce-notices-wrapper' ];\n\t\t\tdelete fragments[ '.fly-cart-messages' ];\n\n\t\t\tsessionStorage.setItem( wc_cart_fragments_params.fragment_name, JSON.stringify( fragments ) );\n\t\t\tset_cart_hash( cart_hash );\n\t\t} );\n\n\t\t$( document.body ).on( 'wc_fragments_refreshed', function() {\n\t\t\tclearTimeout( cart_timeout );\n\t\t\tcart_timeout = setTimeout( refresh_cart_fragment, day_in_ms );\n\t\t} );\n\n\t\t// Refresh when storage changes in another tab\n\t\t$( window ).on( 'storage onstorage', function( e ) {\n\t\t\tif (\n\t\t\t\tcart_hash_key === e.originalEvent.key && localStorage.getItem( cart_hash_key ) !== sessionStorage.getItem( cart_hash_key )\n\t\t\t) {\n\t\t\t\trefresh_cart_fragment();\n\t\t\t}\n\t\t} );\n\n\t\t// Refresh when page is shown after back button (safari)\n\t\t$( window ).on( 'pageshow', function( e ) {\n\t\t\tif ( e.originalEvent.persisted ) {\n\t\t\t\t$( '.widget_shopping_cart_content' ).empty();\n\t\t\t\t$( document.body ).trigger( 'wc_fragment_refresh' );\n\t\t\t}\n\t\t} );\n\n\t\t/**\n\t\t * Minimog updated this code.\n\t\t * Wrap try catch block with custom function to reuse later.\n\t\t *\n\t\t * @var bool loadMiniCart Whether to load mini cart content. Mini cart maybe has lot of images. don't load them when they not visible to improvement performance.\n\t\t */\n\t\tfunction loadCartFragments( loadCartContent = true ) {\n\t\t\ttry {\n\t\t\t\tvar wc_fragments = JSON.parse( sessionStorage.getItem( wc_cart_fragments_params.fragment_name ) ),\n\t\t\t\t    cart_hash    = sessionStorage.getItem( cart_hash_key ),\n\t\t\t\t    cookie_hash  = Cookies.get( 'woocommerce_cart_hash' ),\n\t\t\t\t    cart_created = sessionStorage.getItem( 'wc_cart_created' );\n\n\t\t\t\tif ( cart_hash === null || cart_hash === undefined || cart_hash === '' ) {\n\t\t\t\t\tcart_hash = '';\n\t\t\t\t}\n\n\t\t\t\tif ( cookie_hash === null || cookie_hash === undefined || cookie_hash === '' ) {\n\t\t\t\t\tcookie_hash = '';\n\t\t\t\t}\n\n\t\t\t\tif ( cart_hash && (\n\t\t\t\t\tcart_created === null || cart_created === undefined || cart_created === ''\n\t\t\t\t) ) {\n\t\t\t\t\tthrow 'No cart_created';\n\t\t\t\t}\n\n\t\t\t\tif ( cart_created ) {\n\t\t\t\t\tvar cart_expiration = (\n\t\t\t\t\t\t    (\n\t\t\t\t\t\t\t    1 * cart_created\n\t\t\t\t\t\t    ) + day_in_ms\n\t\t\t\t\t    ),\n\t\t\t\t\t    timestamp_now   = (\n\t\t\t\t\t\t    new Date()\n\t\t\t\t\t    ).getTime();\n\t\t\t\t\tif ( cart_expiration < timestamp_now ) {\n\t\t\t\t\t\tthrow 'Fragment expired';\n\t\t\t\t\t}\n\t\t\t\t\tcart_timeout = setTimeout( refresh_cart_fragment, (\n\t\t\t\t\t\tcart_expiration - timestamp_now\n\t\t\t\t\t) );\n\t\t\t\t}\n\n\t\t\t\tif ( wc_fragments && wc_fragments[ 'div.widget_shopping_cart_content' ] && cart_hash === cookie_hash ) {\n\t\t\t\t\t$.each( wc_fragments, function( key, value ) {\n\t\t\t\t\t\tif ( ! loadCartContent && 'div.widget_shopping_cart_content' === key ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$( key ).replaceWith( value );\n\t\t\t\t\t} );\n\n\t\t\t\t\t$( document.body ).trigger( 'wc_fragments_loaded' );\n\t\t\t\t} else {\n\t\t\t\t\tthrow 'No fragment';\n\t\t\t\t}\n\n\t\t\t} catch ( err ) {\n\t\t\t\trefresh_cart_fragment();\n\t\t\t}\n\t\t}\n\n\t\tloadCartFragments( false );\n\n\t\t$( document.body ).on( 'minimog_fly_cart_first_open', function() {\n\t\t\tloadCartFragments( true ); // Load cart content when fly cart open.\n\t\t} );\n\t} else {\n\t\trefresh_cart_fragment();\n\t}\n\n\t/* Cart Hiding */\n\tif ( Cookies.get( 'woocommerce_items_in_cart' ) > 0 ) {\n\t\t$( '.hide_cart_widget_if_empty' ).closest( '.widget_shopping_cart' ).show();\n\t} else {\n\t\t$( '.hide_cart_widget_if_empty' ).closest( '.widget_shopping_cart' ).hide();\n\t}\n\n\t$( document.body ).on( 'adding_to_cart', function() {\n\t\t$( '.hide_cart_widget_if_empty' ).closest( '.widget_shopping_cart' ).show();\n\t} );\n\n\t// Customiser support.\n\tvar hasSelectiveRefresh = (\n\t\t'undefined' !== typeof wp &&\n\t\twp.customize &&\n\t\twp.customize.selectiveRefresh &&\n\t\twp.customize.widgetsPreview &&\n\t\twp.customize.widgetsPreview.WidgetPartial\n\t);\n\tif ( hasSelectiveRefresh ) {\n\t\twp.customize.selectiveRefresh.bind( 'partial-content-rendered', function() {\n\t\t\trefresh_cart_fragment();\n\t\t} );\n\t}\n} );\n"]}