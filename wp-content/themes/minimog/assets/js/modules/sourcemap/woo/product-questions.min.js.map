{"version":3,"sources":["product-questions.js"],"names":["$","Helpers","window","minimog","document","ready","$noreViews","$questionContainer","$questionList","$productQuestionWrap","$tabPanel","$form","$questionToolbar","$productQuestion","body","on","evt","preventDefault","this","$submitBtn","find","$question","questionParentID","parseInt","val","questionCount","html","ajax","url","$minimog","ajaxurl","type","cache","dataType","data","serialize","success","response","questionText","$questionChildList","length","prepend","appendTo","trigger","remove","single_text","plural_text","addClass","text","message","slideDown","beforeSend","removeClass","slideUp","setElementHandling","complete","unsetElementHandling","$thisButton","questionID","$questionModal","$questionModalTitle","$formMessages","$questionParent","questionerName","closest","siblings","children","modalTitle","replace","MinimogModal","fragments","each","key","value","empty","trim","$newElement","parseHTML","MinimogTabPanel","setBodyHandling","headerHeight","offset","top","hasClass","outerHeight","animate","scrollTop","setBodyCompleted","linkParams","getUrlParamsAsObject","attr","page","current_page","$questionWrap","jQuery"],"mappings":"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","file":"../../../woo/product-questions.min.js","sourcesContent":["(\n\tfunction( $ ) {\n\t\t'use strict';\n\n\t\tvar Helpers = window.minimog.Helpers;\n\n\t\t$( document ).ready( function() {\n\t\t\tquestionFormHandler();\n\t\t\treplyHandler();\n\t\t\tgetProductQuestions();\n\n\t\t\t$( document.body ).on( 'minimog_product_question_added', function() {\n\t\t\t\tvar $questionWrap = $( '#minimog-wc-question' );\n\n\t\t\t\tif ( $questionWrap.length > 0 ) {\n\t\t\t\t\tvar $tabPanel = $questionWrap.closest( '.minimog-tabs' );\n\n\t\t\t\t\tif ( $tabPanel.length > 0 ) {\n\t\t\t\t\t\t$tabPanel.MinimogTabPanel( 'updateLayout' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\tfunction getProductQuestions() {\n\t\t\tvar $productQuestionWrap = $( '#minimog-wc-question' ),\n\t\t\t    $tabPanel            = $productQuestionWrap.closest( '.minimog-tabs' ),\n\t\t\t    $questionContainer   = $( '.question-list-container', $productQuestionWrap ),\n\t\t\t    $form                = $( '.question-search-form', $productQuestionWrap ),\n\t\t\t    $questionList        = $( '.question-list', $productQuestionWrap ),\n\t\t\t    $questionToolbar     = $( '.question-toolbar', $productQuestionWrap );\n\n\t\t\t$form.on( 'submit', function( evt ) {\n\t\t\t\tevt.preventDefault();\n\n\t\t\t\t$.ajax( {\n\t\t\t\t\turl: $minimog.ajaxurl,\n\t\t\t\t\ttype: 'GET',\n\t\t\t\t\tdata: $form.serialize(),\n\t\t\t\t\tdataType: 'json',\n\t\t\t\t\tcache: true,\n\t\t\t\t\tsuccess: function( response ) {\n\t\t\t\t\t\tif ( response.data.fragments ) {\n\t\t\t\t\t\t\t$.each( response.data.fragments, function( key, value ) {\n\t\t\t\t\t\t\t\t$( key ).empty();\n\n\t\t\t\t\t\t\t\tif ( '' !== value ) {\n\t\t\t\t\t\t\t\t\tvalue = $.trim( value );\n\n\t\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t\t * Append only children.\n\t\t\t\t\t\t\t\t\t * Avoid to use replaceWith to lost \"key\" events\n\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\tvar $newElement = $( $.parseHTML( value ) );\n\t\t\t\t\t\t\t\t\t$( key ).html( $newElement.html() );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\tif ( $tabPanel.length > 0 ) {\n\t\t\t\t\t\t\t\t$tabPanel.MinimogTabPanel( 'updateLayout' );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t$( document.body ).trigger( 'minimog_get_product_questions_fragments_loaded' );\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tbeforeSend: function() {\n\t\t\t\t\t\tHelpers.setBodyHandling();\n\t\t\t\t\t\tvar headerHeight = 0,\n\t\t\t\t\t\t    offset       = $questionToolbar.offset().top;\n\n\t\t\t\t\t\tif ( $( document.body ).hasClass( 'header-sticky-enable' ) ) {\n\t\t\t\t\t\t\theaderHeight = $( '#page-header' ).outerHeight();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\toffset -= headerHeight;\n\t\t\t\t\t\t$( 'html, body' ).animate( { scrollTop: offset }, 800 );\n\t\t\t\t\t},\n\t\t\t\t\tcomplete: function() {\n\t\t\t\t\t\tHelpers.setBodyCompleted();\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\treturn false;\n\t\t\t} );\n\n\t\t\t$( document.body ).on( 'click', '.question-navigation a', function( evt ) {\n\t\t\t\tevt.preventDefault();\n\n\t\t\t\tvar linkParams = Helpers.getUrlParamsAsObject( $( this ).attr( 'href' ) );\n\t\t\t\tvar page = linkParams ? linkParams.current_page : 1;\n\n\t\t\t\t$form.find( 'input[name=\"current_page\"]' ).val( page );\n\t\t\t\t$form.trigger( 'submit' );\n\t\t\t} );\n\t\t}\n\n\t\tfunction questionFormHandler() {\n\t\t\tvar $productQuestion   = $( '#minimog-wc-question' ),\n\t\t\t    $noreViews         = $( '.woocommerce-noreviews', $productQuestion ),\n\t\t\t    $questionContainer = $( '.question-list-container', $productQuestion ),\n\t\t\t    $questionList      = $( '.question-list', $productQuestion );\n\n\t\t\t$( document.body ).on( 'submit', '.question-form', function( evt ) {\n\t\t\t\tevt.preventDefault();\n\n\t\t\t\tvar $form            = $( this ),\n\t\t\t\t    $submitBtn       = $form.find( 'button[type=\"submit\"]' ),\n\t\t\t\t    $question        = $( '[name=question]', $form ),\n\t\t\t\t    questionParentID = parseInt( $( 'input[name=question_parent_id]', $form ).val() ),\n\t\t\t\t    questionCount    = parseInt( $( '.question-count', $questionContainer ).html() );\n\n\t\t\t\t$.ajax( {\n\t\t\t\t\turl: $minimog.ajaxurl,\n\t\t\t\t\ttype: 'POST',\n\t\t\t\t\tcache: false,\n\t\t\t\t\tdataType: 'json',\n\t\t\t\t\tdata: $form.serialize(),\n\t\t\t\t\tsuccess: function( response ) {\n\t\t\t\t\t\tif ( response.success ) {\n\t\t\t\t\t\t\tif ( questionParentID ) {\n\t\t\t\t\t\t\t\tvar $questionChildList = $( '.children', '#li-comment-' + questionParentID );\n\t\t\t\t\t\t\t\tif ( $questionChildList.length ) {\n\t\t\t\t\t\t\t\t\t$questionChildList.prepend( response.data.response );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t$questionChildList = $( '<ol class=\"children\" />' );\n\t\t\t\t\t\t\t\t\t$questionChildList.appendTo( '#li-comment-' + questionParentID ).html( response.data.response );\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t$( document.body ).trigger( 'minimog_product_question_child_added', [ questionParentID ] );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// Increasing comment count if it is not children comment.\n\t\t\t\t\t\t\t\tquestionCount = questionCount + 1;\n\n\t\t\t\t\t\t\t\t// Remove no questions text.\n\t\t\t\t\t\t\t\tif ( $noreViews.length ) {\n\t\t\t\t\t\t\t\t\t$noreViews.remove();\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t$questionList.prepend( response.data.response );\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar questionText = questionCount === 1 ? response.data.single_text : response.data.plural_text;\n\n\t\t\t\t\t\t\t$( '.question-count', $questionContainer ).html( questionCount );\n\t\t\t\t\t\t\t$( '.question-text', $questionContainer ).html( questionText );\n\n\t\t\t\t\t\t\t$question.val( '' );\n\t\t\t\t\t\t\t$( document.body ).trigger( 'minimog_product_question_added', [ response.data, true ] );\n\n\t\t\t\t\t\t\t$form.find( '.question-form-message-box' ).addClass( 'success' ).text( response.data.message ).slideDown();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t$form.find( '.question-form-message-box' ).addClass( 'failed' ).text( response.data.message ).slideDown();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tbeforeSend: function() {\n\t\t\t\t\t\t$form.find( '.question-form-message-box' ).text( '' ).removeClass( 'failed success' ).slideUp();\n\t\t\t\t\t\tHelpers.setElementHandling( $submitBtn );\n\t\t\t\t\t},\n\t\t\t\t\tcomplete: function() {\n\t\t\t\t\t\tHelpers.unsetElementHandling( $submitBtn );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t}\n\n\t\tfunction replyHandler() {\n\t\t\t$( document.body ).on( 'click', '.question-reply', function( evt ) {\n\t\t\t\tevt.preventDefault();\n\n\t\t\t\tvar $thisButton         = $( this ),\n\t\t\t\t    questionID          = $thisButton.data( 'question-id' ),\n\t\t\t\t    $questionModal      = $( '#modal-product-question' ),\n\t\t\t\t    $questionModalTitle = $questionModal.find( '.modal-title' ),\n\t\t\t\t    $formMessages       = $questionModal.find( '.question-form-message-box' ),\n\t\t\t\t    $questionParent     = $questionModal.find( 'input[name=\"question_parent_id\"]' );\n\n\t\t\t\tvar questionerName = $thisButton.closest( '.comment-footer' ).siblings( '.meta' ).children( '.fn' ).text();\n\t\t\t\tvar modalTitle = $questionModal.data( 'reply-title' );\n\t\t\t\t$formMessages.removeClass( 'success failed' ).text( '' );\n\n\t\t\t\tmodalTitle = modalTitle.replace( '{comment_author_name}', questionerName );\n\t\t\t\t$questionModalTitle.text( modalTitle );\n\t\t\t\t$questionModal.MinimogModal( 'open' );\n\t\t\t\t$questionParent.val( questionID );\n\t\t\t} );\n\t\t}\n\t}\n)( jQuery );\n"]}